// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hooks/arrow.ts 1`] = `
// source
export const useDemo = (name: string) => {}

export const useArrow = (name: string) => {
  useDemo(name + '666')
}

export const useAsyncArrow = async (name: string) => {
  await useDemo(name + '666')
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAsyncArrow = exports.useArrow = exports.useDemo = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
exports.useDemo = function useDemo(name) { const _req_ctx_ = this; };
exports.useArrow = function useArrow(name) { const _req_ctx_ = this; runtime_1.bind(exports.useDemo, _req_ctx_)(name + '666'); };
exports.useAsyncArrow = async function useAsyncArrow(name) { const _req_ctx_ = this; await runtime_1.bind(exports.useDemo, _req_ctx_)(name + '666'); };
//# sourceMappingURL=arrow.js.map
`;

exports[`hooks/arrow-default-export.ts 1`] = `
// source
export default async (name: string) => {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
exports.default = async (name) => { };
//# sourceMappingURL=arrow-default-export.js.map
`;

exports[`hooks/builtin-hooks.ts 1`] = `
// source
import { useConfig, useContext, useInject, useLogger, usePlugin, useApp } from '@midwayjs/hooks'

export function useBuiltinHooks() {
  useConfig()
  useLogger()
  useContext()
  useInject('')
  usePlugin('')
  useApp()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useBuiltinHooks = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
function useBuiltinHooks() {
    const _req_ctx_ = this;
    runtime_1.call("useConfig", _req_ctx_)();
    runtime_1.call("useLogger", _req_ctx_)();
    runtime_1.call("useContext", _req_ctx_)();
    runtime_1.call("useInject", _req_ctx_)('');
    runtime_1.call("usePlugin", _req_ctx_)('');
    runtime_1.call("useApp", _req_ctx_)();
}
exports.useBuiltinHooks = useBuiltinHooks;
//# sourceMappingURL=builtin-hooks.js.map
`;

exports[`hooks/func-default-export.ts 1`] = `
// source
export default function (name: string) {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function default_1(name) { }
exports.default = default_1;
//# sourceMappingURL=func-default-export.js.map
`;

exports[`hooks/import-hook.ts 1`] = `
// source
import { useDemo } from './useDemo'
import { useContext } from '@midwayjs/hooks'

export function useQuery(name: any) {
  useContext()
  useDemo(name)
  console.log(useFakeHooks)
}

export class ThisNotHooks {}

export const useFakeHooks = ''


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useFakeHooks = exports.ThisNotHooks = exports.useQuery = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const useDemo_1 = require("./useDemo");
const hooks_1 = require("@midwayjs/hooks");
function useQuery(name) {
    const _req_ctx_ = this;
    runtime_1.call("useContext", _req_ctx_)();
    runtime_1.bind(useDemo_1.useDemo, _req_ctx_)(name);
    console.log(exports.useFakeHooks);
}
exports.useQuery = useQuery;
class ThisNotHooks {
}
exports.ThisNotHooks = ThisNotHooks;
exports.useFakeHooks = '';
//# sourceMappingURL=import-hook.js.map
`;

exports[`hooks/import-namespace.ts 1`] = `
// source
import * as hooks from './import-hook'

export function useNamespace() {
  const n = new hooks.ThisNotHooks()
  console.log(hooks.useFakeHooks)
  return hooks.useQuery(n)
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useNamespace = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks = require("./import-hook");
function useNamespace() {
    const _req_ctx_ = this;
    const n = new hooks.ThisNotHooks();
    console.log(hooks.useFakeHooks);
    return hooks.runtime_1.bind(useQuery, _req_ctx_)(n);
}
exports.useNamespace = useNamespace;
//# sourceMappingURL=import-namespace.js.map
`;

exports[`hooks/recursion.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'

export function useRecursion(name: string) {
  const ctx = useContext()

  if (Math.random() <= 0.5) {
    return name
  }

  return useRecursion(name)
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useRecursion = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
function useRecursion(name) {
    const _req_ctx_ = this;
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    if (Math.random() <= 0.5) {
        return name;
    }
    return runtime_1.bind(useRecursion, _req_ctx_)(name);
}
exports.useRecursion = useRecursion;
//# sourceMappingURL=recursion.js.map
`;

exports[`hooks/useDemo.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'

export function useDemo(name: string) {
  useContext()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useDemo = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
function useDemo(name) { const _req_ctx_ = this; runtime_1.call("useContext", _req_ctx_)(); }
exports.useDemo = useDemo;
//# sourceMappingURL=useDemo.js.map
`;

exports[`lambda/arrow-hook-ref-arrow-hook.ts 1`] = `
// source
export const useQuery = (id: string) => {
  return ''
}

export const useInner = async () => {
  useQuery('123')
  const inner = () => {
    console.log(useQuery('123'))
  }
  inner()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useInner = exports.useQuery = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
exports.useQuery = function useQuery(id) { const _req_ctx_ = this; return ''; };
exports.useInner = async function useInner() {
    const _req_ctx_ = this;
    runtime_1.bind(exports.useQuery, _req_ctx_)('123');
    const inner = () => {
        console.log(runtime_1.bind(exports.useQuery, _req_ctx_)('123'));
    };
    inner();
};
//# sourceMappingURL=arrow-hook-ref-arrow-hook.js.map
`;

exports[`lambda/export-arrow.ts 1`] = `
// source
export const hello = (name: string) => {
  console.log(name)
}

const functionExpression = function () {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
exports.hello = function hello(name) {
    console.log(name);
};
const functionExpression = function () { };
//# sourceMappingURL=export-arrow.js.map
`;

exports[`lambda/export-default-anonymous.ts 1`] = `
// source
export default () => {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function $default() { }
exports.default = $default;
//# sourceMappingURL=export-default-anonymous.js.map
`;

exports[`lambda/export-default-func.ts 1`] = `
// source
export default function (name: string) {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function $default(name) { }
exports.default = $default;
//# sourceMappingURL=export-default-func.js.map
`;

exports[`lambda/export-default-named.ts 1`] = `
// source
export default function named(name: string) {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function named(name) { const _req_ctx_ = this; }
exports.default = named;
//# sourceMappingURL=export-default-named.js.map
`;

exports[`lambda/hook-ref-hook.ts 1`] = `
// source
export function useQuery(id: string) {
  return ''
}

export async function useInner() {
  useQuery('123')
  const inner = () => {
    console.log(useQuery('123'))
  }
  inner()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useInner = exports.useQuery = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function useQuery(id) { const _req_ctx_ = this; return ''; }
exports.useQuery = useQuery;
async function useInner() {
    const _req_ctx_ = this;
    runtime_1.bind(useQuery, _req_ctx_)('123');
    const inner = () => {
        console.log(runtime_1.bind(useQuery, _req_ctx_)('123'));
    };
    inner();
}
exports.useInner = useInner;
//# sourceMappingURL=hook-ref-hook.js.map
`;

exports[`lambda/hook-ref-lambda.ts 1`] = `
// source
export function hello() {
  normal()
}

function normal() {}

function useDemo(name: string) {
  return hello()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function hello() { const _req_ctx_ = this; normal(); }
exports.hello = hello;
function normal() { }
function useDemo(name) { const _req_ctx_ = this; return runtime_1.bind(hello, _req_ctx_)(); }
//# sourceMappingURL=hook-ref-lambda.js.map
`;

exports[`lambda/import-hook.ts 1`] = `
// source
import { useDemo } from '../hooks/useDemo'

export function hello() {
  useDemo('666')
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const useDemo_1 = require("../hooks/useDemo");
function hello() {
    runtime_1.bind(useDemo_1.useDemo, _req_ctx_)('666');
}
exports.hello = hello;
//# sourceMappingURL=import-hook.js.map
`;

exports[`lambda/index.ts 1`] = `
// source
export function hello() {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function hello() { const _req_ctx_ = this; }
exports.hello = hello;
//# sourceMappingURL=index.js.map
`;

exports[`lambda/lambda-ref-hook.ts 1`] = `
// source
export function hello() {
  useDemo('666')
  normal()
}

function normal() {}

function useDemo(name: string) {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function hello() {
    runtime_1.bind(useDemo, _req_ctx_)('666');
    normal();
}
exports.hello = hello;
function normal() { }
function useDemo(name) { const _req_ctx_ = this; }
//# sourceMappingURL=lambda-ref-hook.js.map
`;

exports[`lambda/lambda-ref-lambda.ts 1`] = `
// source
export function hello(name: string, value: string) {}

const hello3 = (name: string) => {}

export function hello2(name: string) {
  hello(name, '1')
  hello3(name)
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello2 = exports.hello = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function hello(name, value) { const _req_ctx_ = this; }
exports.hello = hello;
const hello3 = (name) => { };
function hello2(name) {
    runtime_1.bind(hello, _req_ctx_)(name, '1');
    hello3(name);
}
exports.hello2 = hello2;
//# sourceMappingURL=lambda-ref-lambda.js.map
`;

exports[`lambda/normal-function.ts 1`] = `
// source
export function hello() {
  normal()
}

function normal() {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
function hello() { const _req_ctx_ = this; normal(); }
exports.hello = hello;
function normal() { }
//# sourceMappingURL=normal-function.js.map
`;

exports[`lambda/recursion.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'

export function recursion(name: string) {
  const ctx = useContext()

  if (Math.random() <= 0.5) {
    return name
  }

  return recursion(name)
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.recursion = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
function recursion(name) {
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    if (Math.random() <= 0.5) {
        return name;
    }
    return runtime_1.bind(recursion, _req_ctx_)(name);
}
exports.recursion = recursion;
//# sourceMappingURL=recursion.js.map
`;

exports[`lambda/ref/bar.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'
import { refFoo, Foo } from './foo'

export async function bar() {
  const foo: Foo = ''
  const ctx = useContext()
  refFoo()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bar = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
const foo_1 = require("./foo");
async function bar() {
    const foo = '';
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    runtime_1.bind(foo_1.refFoo, _req_ctx_)();
}
exports.bar = bar;
//# sourceMappingURL=bar.js.map
`;

exports[`lambda/ref/foo.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'

export type Foo = any

export async function refFoo() {
  const ctx = useContext()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.refFoo = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
async function refFoo() {
    const ctx = runtime_1.call("useContext", _req_ctx_)();
}
exports.refFoo = refFoo;
//# sourceMappingURL=foo.js.map
`;

exports[`lambda/with/export-default-arrow.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export default withController(
  {
    middleware: ['staticFile'],
  },
  async () => {
    const ctx = useContext()
    return 'xxx'
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
exports.default = hooks_1.withController({
    middleware: ['staticFile'],
}, async function $default() {
    const _req_ctx_ = this;
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    return 'xxx';
});
//# sourceMappingURL=export-default-arrow.js.map
`;

exports[`lambda/with/export-default-expression.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export default withController(
  {
    middleware: ['staticFile'],
  },
  async function () {
    const ctx = useContext()
    return 'xxx'
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
exports.default = hooks_1.withController({
    middleware: ['staticFile'],
}, async function () {
    const _req_ctx_ = this;
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    return 'xxx';
});
//# sourceMappingURL=export-default-expression.js.map
`;

exports[`lambda/with/export-default-named.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export default withController(
  {
    middleware: ['staticFile'],
  },
  async function named() {
    const ctx = useContext()
    return 'xxx'
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
exports.default = hooks_1.withController({
    middleware: ['staticFile'],
}, async function named() {
    const _req_ctx_ = this;
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    return 'xxx';
});
//# sourceMappingURL=export-default-named.js.map
`;

exports[`lambda/with/export-variable.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export const post = withController(
  {
    middleware: [],
  },
  async (name: string) => {
    const ctx = useContext()
    console.log(name)
  }
)

export const get = withController(
  {
    middleware: [],
  },
  async () => {
    const ctx = useContext()
    console.log(name)
  }
)

export default withController(
  {
    middleware: [],
  },
  async () => {
    const ctx = useContext()
    return ctx.query.from
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.get = exports.post = void 0;
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
exports.post = hooks_1.withController({
    middleware: [],
}, async (name) => {
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    console.log(name);
});
exports.get = hooks_1.withController({
    middleware: [],
}, async () => {
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    console.log(name);
});
exports.default = hooks_1.withController({
    middleware: [],
}, async function $default() {
    const _req_ctx_ = this;
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    return ctx.query.from;
});
//# sourceMappingURL=export-variable.js.map
`;

exports[`lambda/with-default-post.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export default withController(
  {
    middleware: ['staticFile'],
  },
  async (name: string) => {
    const ctx = useContext()
    return 'xxx'
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("@midwayjs/hooks/lib/runtime");
const hooks_1 = require("@midwayjs/hooks");
exports.default = hooks_1.withController({
    middleware: ['staticFile'],
}, async function $default(name) {
    const _req_ctx_ = this;
    const ctx = runtime_1.call("useContext", _req_ctx_)();
    return 'xxx';
});
//# sourceMappingURL=with-default-post.js.map
`;

exports[`routes should match snapshot 1`] = `{}`;
